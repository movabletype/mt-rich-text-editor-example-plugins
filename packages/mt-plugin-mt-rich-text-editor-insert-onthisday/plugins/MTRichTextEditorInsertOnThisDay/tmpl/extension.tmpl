<mt:setvarblock name="js_include" append="1">
  <!-- <__trans_section component="mtrichtexteditorinsertonthisday"> -->
  <template id="mt-rich-text-editor-insert-on-this-day-icon">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
    >
      <text x="50%" y="60%" dominant-baseline="middle" text-anchor="middle">
        Day
      </text>
    </svg>
  </template>
  <script type="module">
    const iconString = document.querySelector(
      "#mt-rich-text-editor-insert-on-this-day-icon"
    ).innerHTML;

    class RichTextEditorInsertOnThisDay extends MTRichTextEditor.Component
      .QuickActionItemElement {
      connectedCallback() {
        super.connectedCallback();

        // The string specified in `this.aliases` is the target of the search.
        this.aliases = ["day"];

        const button = document.createElement("button");
        this.shadowRoot.appendChild(button);

        const icon = document.createElement("span");
        icon.classList.add("icon");
        icon.innerHTML = iconString;
        button.appendChild(icon);

        const title = document.createElement("span");
        title.textContent = "<__trans phrase='On This Day' encode_js='1' />";
        button.appendChild(title);

        // when clicked or Enter key is pressed
        this.addEventListener("click", () => {
          const today = new Date();
          const month = today.getMonth() + 1;
          const day = today.getDate();

          fetch(
            `https://ja.wikipedia.org/w/api.php?format=json&action=query&prop=revisions&rvprop=content&exintro&explaintext&redirects=1&titles=${month}%E6%9C%88${day}%E6%97%A5&origin=*`
          )
            .then((response) => response.json())
            .then((data) => {
              const pages = data.query.pages;
              const pageId = Object.keys(pages)[0];

              // This implementation is based on the information at the following URL
              // https://zenn.dev/mattn/books/bb181f3f4731920f29a5/viewer/69be024c552cdab28c1f
              const contents = pages[pageId].revisions[0]["*"]
                .replace(/.*== 記念日・年中行事 ==/s, "")
                .replace(/\n== .*/s, "")
                .split("\n")
                .filter((line) => !line.startsWith("*:"))
                .map((line) =>
                  line
                    .replace(/^(.*)（[^）]+）?$/m, "$1")
                    .replace(/\[\[([^]|]+\|)*([^]]+)\]\]/g, "$2")
                    .replace(/[{}|[\]]|^\* /g, "")
                    .trim()
                )
                .filter((line) => line);
              const onThisDay = contents.at(
                Math.floor(Math.random() * contents.length)
              );

              const el = document.createElement("blockquote");
              el.textContent = `${month}月${day}日は${onThisDay}です`;

              this.insertContent(el.outerHTML);

              const editor = this.tiptap;
              const nextPos = editor.state.selection.$anchor.after(1);
              if (nextPos >= editor.state.doc.content.size) {
                editor.commands.insertContentAt(nextPos, {
                  type: "paragraph",
                });
              } else {
                editor.commands.setTextSelection(
                  editor.state.selection.$anchor.after(1)
                );
              }
            })
            .catch((error) => {
              console.error("Error fetching data from Wikipedia:", error);
            });
        });
      }
    }

    // register the component as a custom element with the "mt-rich-text-editor-quick-action-item-" prefix.
    customElements.define(
      "mt-rich-text-editor-quick-action-item-on-this-day",
      RichTextEditorInsertOnThisDay
    );

    // add the item "on-this-day" in the quick action menu.
    MTRichTextEditor.on("create", (config) => {
      config.quickAction = [...(config.quickAction || []), "on-this-day"];
    });
  </script>
  <!-- </__trans_section> -->
</mt:setvarblock>
